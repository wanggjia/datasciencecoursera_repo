getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
?read.csv
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[, 11]
outcome[, 11] <- as.numeric(outcome[, 11])
?hist
hist(outcome[,11])
hospital <- read.csv("hospital-data.csv", colClasses = "character")
names(hospital)
install.packages("dplyr")
outcome
names(outcome)
outcome$Hosptial.Name
outcome$"Hosptial.Name"
outcome[, "Hosptial.Name"]
outcome$Hosptial
outcome[, 2]
dim(outcome)
str(outcome)
names(outcome)
? select
outcome[, 11]
outcome[1,]
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"   "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
?stop
allStates <- levels(factor(careMeasure[, 7]))
allStates <- levels(factor(outcome[, 7]))
allStates
"AK" %in% allStates
subCareMeasure <- select(outcome, Hosptial.name,  State, colName)
library(dplyr)
subCareMeasure <- select(outcome, Hosptial.name,  State, colName)
?select()
subCareMeasure <- select(outcome, Hospital.name,  State, colName)
subCareMeasure <- select(outcome, Hospital.Name,  State, colName)
subCareMeasure <- select(outcome, Hospital.Name,  State, as.character(colName))
subCareMeasure <- select(outcome, Hospital.Name,  State, as.character(colName))
subCareMeasure <- select(outcome, Hospital.Name,  State, )
if (outcome == "heart attack"){
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}else if (outcome == "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia" ){
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}else {
stop("invalid outcome")
}
outcome <- "heart attack"
if (outcome == "heart attack"){
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}else if (outcome == "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia" ){
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}else {
stop("invalid outcome")
}
colName
if (outcome == "heart attack"){
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}else if (outcome == "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia" ){
colName <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}else {
stop("invalid outcome")
}
colName
careMeasure <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
allStates
subCareMeasure <- select(careMeasure, Hosptial.name,  State, colName)
subCareMeasure <- select(careMeasure, Hospital.Name,  State, colName)
subCareMeasure <- select(careMeasure, Hospital.Name,  State, 11)
names(subCareMeasure)
subCareMeasure <- select(careMeasure, Hospital.Name,  State, outcome = colName)
careMeasure <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome == "heart attack"){
colName <- 11
} else if (outcome == "heart failure") {
colName <- 17
}else if (outcome == "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia" ){
colName <- 23
}else {
stop("invalid outcome")
}
subCareMeasure <- select(careMeasure, Hospital.Name,  State, outcome = colName)
names(subCareMeasure)
head(subCareMeasure)
state = "AL"
subCareMeasure <- filter(select(careMeasure, Hospital.Name,  State, colName), State == state)
subCareMeasure
head(subCareMeasure)
tail(subCareMeasure)
nrow(subCareMeasure)
subCareMeasure[90:98, ]
subCareMeasure[80:98, ]
names(subCareMeasure)
subCareMeasure <- filter(select(careMeasure, Hospital.Name,  State, measure = colName), State == state)
names(subCareMeasure)
subCareMeasure[80:98, ]
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- filter(subCareMeasure, State == state & is.numeric(measure))
subCareMeasure
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
nrow(subCareMeasure)
subCareMeasure <- filter(subCareMeasure, State == state)
nrow(subCareMeasure)
names(subCareMeasure)
subCareMeasure <- filter(subCareMeasure, State == state )
?filter
?filter()
?filter
is.numeric(Not available)
is.numeric("Not available"")
q
q
recover()
q
?is.numeric
?is.numeric(2)
is.numeric(2)
is.numeric("not")
is.numeric("not available")
names(subCareMeasure)
subCareMeasure <- filter(subCareMeasure, State == state & is.numeric(measure))
nrow(subCareMeasure)
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- filter(subCareMeasure, State == state & is.numeric != "Not Available")
arrange(subCareMeasure, measure)[1, 1]
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- filter(subCareMeasure, State == state & is.numeric != "Not Available")
arrange(subCareMeasure, measure)[1, 1]
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- filter(subCareMeasure, State == state & measure != "Not Available")
arrange(subCareMeasure, measure)[1, 1]
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- filter(subCareMeasure, State == state & measure != "Not Available")
arrange(subCareMeasure, measure)[1, 1]
subCareMeasure <- select(careMeasure, Hospital.Name)
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- select(subCareMeasure, Hospital.Name == "CRESTWOOD MEDICAL CENTER")
subCareMeasure <- select(subCareMeasure, Hospital.Name == "CRESTWOOD MEDICAL CENTER")
subCareMeasure <- select(subCareMeasure, 1 == "CRESTWOOD MEDICAL CENTER")
subCareMeasure <- select(subCareMeasure, Hospital.Name == "CRESTWOOD MEDICAL CENTER")
subCareMeasure <- filter(subCareMeasure, Hospital.Name == "CRESTWOOD MEDICAL CENTER")
subCareMeasure
> subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
> subCareMeasure <- filter(subCareMeasure, State == state & measure != "Not Available")
> arrange(subCareMeasure, measure)[1, 1]
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- filter(subCareMeasure, State == state & measure != "Not Available")
arrange(subCareMeasure, measure)[1, 1]
subCareMeasure
arrange(subCareMeasure, measure)
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source("best.R")
best("MD", "heart attack")
best("MD", "pneumonia")
debug(best)
best("MD", "pneumonia")
colName
outcome
colName
subCareMeasure
state
subCareMeasure
subCareMeasure
test <- arrange(subCareMeasure, measure)
test
subCareMeasure
state
n
state
clean
q()
state
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
state
debug(best)
best("TX", "heart failure")
state
measure
colName
subCareMeasure
careMeasure <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
colName = 17
state = "TX"
subCareMeasure <- select(careMeasure, Hospital.Name,  State, measure = colName)
subCareMeasure <- filter(subCareMeasure, State == state & measure != "Not Available")
test <- arrange(subCareMeasure, measure)
test
head(test)
filter(subCareMeasure, Hospital.name = "FORT DUNCAN MEDICAL CENTER")
filter(subCareMeasure, Hospital.name == "FORT DUNCAN MEDICAL CENTER")
filter(subCareMeasure, Hospital.Name == "FORT DUNCAN MEDICAL CENTER")
?arrange()
?order
str(filter$measure)
str(filter[3])
str(subCareMeasure$measure)
as.numeric(subCareMeasure$measure)
sort(as.numeric(subCareMeasure$measure))
source(best.R)
q
q
source(best.R)
getwd()
source(best.R)
q
source(best.R)
q()
source(best.R)
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source("rankhospital.R")
source("rankhospital.R")
best("NY", "hert attack")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
traceback()
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
